--1A

SELECT
    lpad('-',2*(level-1),'|-') ||
    t.owner || '.'|| t.type_name ||
    ' (FINAL:'||t.final||', INSTANTIABLE:' ||
    t.instantiable || ', ATTRIBUTES:' ||
    t.attributes || ', METHODS:' ||
    t.methods || ')'
FROM all_types t
START WITH t.type_name = 'ST_GEOMETRY'
CONNECT BY PRIOR t.type_name = t.supertype_name
    AND PRIOR t.owner = t.owner;


--1B

SELECT DISTINCT m.method_name
FROM all_type_methods m
WHERE m.type_name LIKE 'ST_POLYGON'
    AND m.owner = 'MDSYS' ORDER BY 1;
	

--1C

DROP TABLE MYST_MAJOR_CITIES;
CREATE TABLE MYST_MAJOR_CITIES (
    FIPS_CNTRY VARCHAR2(2),
    CITY_NAME VARCHAR2(40),
    STGEOM ST_POINT
);


--1D

SELECT * FROM MAJOR_CITIES WHERE ROWNUM < 5;

INSERT INTO MYST_MAJOR_CITIES
SELECT
    FIPS_CNTRY,
    CITY_NAME,
    ST_POINT(GEOM) STGEOM
FROM MAJOR_CITIES;

SELECT * FROM MYST_MAJOR_CITIES WHERE ROWNUM < 5;


--2A

INSERT INTO MYST_MAJOR_CITIES VALUES (
    'PL',
    'SZCZYRK',
    TREAT(ST_POINT.FROM_WKT('POINT(19.036107 49.718655)', 8307) AS ST_POINT)
);

SELECT * FROM MYST_MAJOR_CITIES WHERE CITY_NAME = 'SZCZYRK';


--2B

SELECT * FROM RIVERS WHERE ROWNUM < 5;

SELECT
    NAME,
    TREAT(ST_POINT.FROM_SDO_GEOM(GEOM) AS ST_GEOMETRY).GET_WKT()
FROM RIVERS;


--2C

SELECT
    SDO_UTIL.TO_GMLGEOMETRY(ST_POINT.GET_SDO_GEOM(STGEOM)) GML
FROM MYST_MAJOR_CITIES 
WHERE CITY_NAME = 'SZCZYRK';


--3A

DROP TABLE MYST_COUNTRY_BOUNDARIES;
CREATE TABLE MYST_COUNTRY_BOUNDARIES (
    FIPS_CNTRY VARCHAR2(2),
    CNTRY_NAME VARCHAR2(40),
    STGEOM ST_MULTIPOLYGON
);


--3B

SELECT * FROM COUNTRY_BOUNDARIES WHERE ROWNUM < 5;

INSERT INTO MYST_COUNTRY_BOUNDARIES
SELECT
    FIPS_CNTRY,
    CNTRY_NAME,
    ST_MULTIPOLYGON(GEOM)
FROM COUNTRY_BOUNDARIES;

SELECT * FROM MYST_COUNTRY_BOUNDARIES WHERE ROWNUM < 5;


--3C

SELECT
    B.STGEOM.ST_GEOMETRYTYPE() AS TYP_OBIEKTU,
    COUNT(*) AS ILE
FROM MYST_COUNTRY_BOUNDARIES B
GROUP BY B.STGEOM.ST_GEOMETRYTYPE();


--3D

SELECT
    B.STGEOM.ST_ISSIMPLE()
FROM MYST_COUNTRY_BOUNDARIES B;


--4A

SELECT
    B.CNTRY_NAME,
    COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES B,
    MYST_MAJOR_CITIES C
WHERE B.STGEOM.ST_CONTAINS(C.STGEOM) = 1
GROUP BY B.CNTRY_NAME;


--4B

SELECT
    A.CNTRY_NAME A_NAME,
    B.CNTRY_NAME B_NAME
FROM MYST_COUNTRY_BOUNDARIES A,
    MYST_COUNTRY_BOUNDARIES B
WHERE  B.CNTRY_NAME = 'Czech Republic' 
    AND A.STGEOM.ST_TOUCHES(B.STGEOM) = 1;


--4C

SELECT DISTINCT
    B.CNTRY_NAME,
    R.NAME
FROM MYST_COUNTRY_BOUNDARIES B,
    RIVERS R
WHERE B.CNTRY_NAME = 'Czech Republic'
    AND B.STGEOM.ST_CROSSES(ST_LINESTRING(R.GEOM)) = 1;


--4D

SELECT
    ROUND(SUM(B.STGEOM.ST_AREA()), -2) POWIERZCHNIA
FROM MYST_COUNTRY_BOUNDARIES B
WHERE  B.CNTRY_NAME IN ('Czech Republic', 'Slovakia');


--4E

SELECT
    B.STGEOM OBIEKT,
    B.STGEOM.ST_DIFFERENCE(ST_GEOMETRY(W.GEOM)).ST_GEOMETRYTYPE() WEGRY_BEZ
FROM MYST_COUNTRY_BOUNDARIES B,
 WATER_BODIES W
WHERE  B.CNTRY_NAME = 'Hungary' AND W.NAME = 'Balaton';


--5A

EXPLAIN PLAN FOR
SELECT
    B.CNTRY_NAME A_NAME,
    COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES B,
    MYST_MAJOR_CITIES C
WHERE SDO_WITHIN_DISTANCE(C.STGEOM, B.STGEOM, 'distance=100 unit=km') = 'TRUE'
    AND B.CNTRY_NAME = 'Poland'
GROUP BY B.CNTRY_NAME;

SELECT plan_table_output FROM table(dbms_xplan.display('plan_table', null, 'basic'));


--5B

SELECT * FROM ALL_SDO_GEOM_METADATA;
SELECT * FROM USER_SDO_GEOM_METADATA;

DELETE FROM USER_SDO_GEOM_METADATA
WHERE COLUMN_NAME = 'STGEOM';

INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_MAJOR_CITIES', 'STGEOM', T.DIMINFO, T.SRID
FROM   ALL_SDO_GEOM_METADATA T
WHERE  T.TABLE_NAME = 'MAJOR_CITIES';

INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_COUNTRY_BOUNDARIES', 'STGEOM', T.DIMINFO, T.SRID
FROM   ALL_SDO_GEOM_METADATA T
WHERE  T.TABLE_NAME = 'COUNTRY_BOUNDARIES';

--5C

CREATE INDEX MYST_MAJOR_CITIES_IDX
ON MYST_MAJOR_CITIES(STGEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

CREATE INDEX MYST_COUNTRY_BOUNDARIES_IDX
ON MYST_COUNTRY_BOUNDARIES(STGEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;


--5D

EXPLAIN PLAN FOR
SELECT
    B.CNTRY_NAME A_NAME,
    COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES B,
    MYST_MAJOR_CITIES C
WHERE SDO_WITHIN_DISTANCE(C.STGEOM, B.STGEOM, 'distance=100 unit=km') = 'TRUE'
    AND B.CNTRY_NAME = 'Poland'
GROUP BY B.CNTRY_NAME;

SELECT plan_table_output
FROM table(dbms_xplan.display('plan_table', null, 'basic'));